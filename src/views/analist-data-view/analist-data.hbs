<div class="container">
    <nav class="navbar navbar-expand-lg navbar-light" style="background-color: #e3f2fd;"> 
        <div class="container-fluid">
            <a class="navbar-brand" href="/analist-data"><strong><span class="fa fa-user"></span> Analista: {{user.name}} {{user.lastname}}  </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/analist-data">Historial</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/analist-data-stream">Datos Actuales</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/analist-data-alert">Historial de Alertas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/logout">Salir <i class="fa fa-sign-out" aria-hidden="true"></i></a>
                </li>
            </ul>
            </div>
        </div>
    </nav>

    <hr>
    <div class="card text-center mt-2 border-dark" style="border-width: 10px; background-color: #e3f2fd;">
        <div class="card-body">
            <h1> <i class="fas fa-chart-line"></i> An√°lisis de Datos del Usuario </h1>
            <hr>
            <form action="/analist-data" method="POST">
                <div class="form-group">
                    <h5 for="role"><span class="fas fa-user-plus"></span> Seleccionar un Usuario </h5>
                    <select name="role">
                        <option value="0">...</option>
                        {{#each users}}
                            <option value={{identification}}>
                                {{identification}} - {{name}} {{lastname}}
                            </option>
                        {{/each}}
                    </select>
                </div>
                <hr>
                <div class="container">
                    <div class="row">
                        <div class="col-md-4 align-items-center">
                            <h5 for="selectedStartDate"><span class="fas fa-calendar-alt"></span> Fecha Inicial </h5>
                            <input type="datetime-local" name="selectedStartDate">
                        </div>
                        <div class="col-md-4 align-items-center">
                            <h5 for="selectedEndDate"><span class="fas fa-calendar-alt"></span> Fecha Final </h5>
                            <input type="datetime-local" name="selectedEndDate">
                        </div>
                        <div class="col-md-1 align-items-center">
                           <input type="submit" class="btn btn-dark btn-lg mt-5">
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
{{!-- <script>
    let measureArray = [];
    let labelChart = {};
    let labelsTag = [];
    let labelsTagStr = [];

    {{#each measureFrecuencia}}
        measureArray.push({{measure}})
        labelChart = "{{vital_sign}}"
        labelsTag.push("{{time_record}}")
    {{/each}}


    function convert(str) {
        var date = new Date(str),
        mnth = ("0" + (date.getMonth() + 1)).slice(-2),
        day = ("0" + date.getDate()).slice(-2);
        return [date.getFullYear() + '-' + mnth + '-' + day + '\n' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ':' + date.getMilliseconds()].toString()
    }
    for(let i=0; i < labelsTag.length; i++) {
        labelsTagStr.push(convert(labelsTag[i]));
    }

    const data = {
        labels: labelsTagStr,
        datasets: [{
            label: labelChart,
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: measureArray,
        }]
    };

    const config = {
        type: 'line',
        data: data,
        options: {}
    };

    const myChart = new Chart(
        document.getElementById('ChartFrec'),
        config
    );
</script>
<script>
    let measureArray1 = [];
    let labelChart1 = {};
    let labelsTag1 = [];
    let labelsTagStr1 = [];

    {{#each measureTemperatura}}
        measureArray1.push({{measure}})
        labelChart1 = "{{vital_sign}}"
        labelsTag1.push("{{time_record}}")
    {{/each}}


    function convert(str) {
        var date = new Date(str),
        mnth = ("0" + (date.getMonth() + 1)).slice(-2),
        day = ("0" + date.getDate()).slice(-2);
        return [date.getFullYear() + '-' + mnth + '-' + day + '\n' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ':' + date.getMilliseconds()].toString()
    }
    for(let i=0; i < labelsTag1.length; i++) {
        labelsTagStr1.push(convert(labelsTag1[i]));
    }

    const data1 = {
        labels: labelsTagStr1,
        datasets: [{
            label: labelChart1,
            backgroundColor: 'rgb(35, 252, 125)',
            borderColor: 'rgb(35, 252, 125)',
            data: measureArray1,
        }]
    };

    const config1 = {
        type: 'line',
        data: data1,
        options: {}
    };

    const myChart1 = new Chart(
        document.getElementById('ChartTemp'),
        config1
    );
</script>
<script>
     let measureArray2 = [];
    let labelChart2 = {};
    let labelsTag2 = [];
    let labelsTagStr2 = [];

    {{#each measureOxigenacion}}
        measureArray2.push({{measure}})
        labelChart2 = "{{vital_sign}}"
        labelsTag2.push("{{time_record}}")
    {{/each}}


    function convert(str) {
        var date = new Date(str),
        mnth = ("0" + (date.getMonth() + 1)).slice(-2),
        day = ("0" + date.getDate()).slice(-2);
        return [date.getFullYear() + '-' + mnth + '-' + day + '\n' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ':' + date.getMilliseconds()].toString()
    }
    for(let i=0; i < labelsTag2.length; i++) {
        labelsTagStr2.push(convert(labelsTag2[i]));
    }

    const data2 = {
        labels: labelsTagStr2,
        datasets: [{
            label: labelChart2,
            backgroundColor: 'rgb(86, 35, 252)',
            borderColor: 'rgb(86, 35, 252)',
            data: measureArray2,
        }]
    };

    const config2 = {
        type: 'line',
        data: data2,
        options: {}
    };

    const myChart2 = new Chart(
        document.getElementById('ChartOxi'),
        config2
    );
</script> --}}